name: test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-win:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [16, 18, 20, 21] # Specify Node.js versions here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm install
      - name: Test
        run: npm test
      - name: Report
        run: npx c8 report --reporter=text-lcov > coverage/lcov.info
      - name: Coverage
        uses: coverallsapp/github-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test-unix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20, 21] # Specify Node.js versions here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm install
      - name: Test
        run: npm test
      - name: Report
        run: npx c8 report --reporter=text-lcov > coverage/lcov.info
      - name: Coverage
        uses: coverallsapp/github-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: [test-unix, test-win]
    if: ${{ github.ref == 'refs/heads/master' && !startsWith(github.event.head_commit.message, 'chore(release):') && !startsWith(github.event.head_commit.message, 'docs:') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Dependencies
        run: npm install
      - name: Release
        if: ${{ github.ref == 'refs/heads/master' && !startsWith(github.event.head_commit.message, 'chore(release):') && !startsWith(github.event.head_commit.message, 'docs:') }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          npm run release
